name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Azure deployment environment"
        required: true
        default: Dev
        type: choice
        options:
          - Dev
          - Test

#permissions for oidc auth
permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
  ARM_USE_OIDC: true

jobs:
  destroy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.1"

      # Login to Azure using OIDC
      - name: Login to Azure CLI
        uses: azure/login@v2.2.0
        with:
          client-id: ${{ secrets.AZ_CLIENT_ID }}
          tenant-id: ${{ secrets.AZ_TENANT_ID }}
          subscription-id: ${{ secrets.AZ_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: >
          terraform init
          -backend-config="resource_group_name=${{ secrets.TERRAFORM_STATE_RESOURCE_GROUP }}"
          -backend-config="storage_account_name=${{ secrets.TERRAFORM_STATE_STORAGE_ACCOUNT_NAME }}"
          -backend-config="container_name=${{ secrets.TERRAFORM_STATE_STORAGE_CONTAINER_NAME }}"
          -backend-config="key=${{ secrets.TERRAFORM_STATE_KEY }}"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
