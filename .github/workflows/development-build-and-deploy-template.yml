name: Development build & deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      org-name:
        type: string
        default: dfe-digital
      docker-build-file:
        type: string
        required: true
      image-stem:
        type: string        
        default: swip-digital-service
      short-image-name:
        required: true
        type: string
      web-app-name:
        required: true
        type: string

env:
  REGISTRY_NAME: s205d01acr

jobs:
  set-env:
    runs-on: ubuntu-24.04
    name: Set Environment Values
    environment: ${{ inputs.environment }}
    outputs:
      branch: ${{ steps.var.outputs.branch }}
      checked-out-sha: ${{ steps.var.outputs.checked-out-sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - id: var
        run: |
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
          echo "branch=$GIT_BRANCH" >> $GITHUB_OUTPUT
          echo "checked-out-sha=${CHECKED_OUT_SHA}" >> $GITHUB_OUTPUT

  create-and-publish-image:
    needs: set-env
    name: Create & Publish Image
    uses: ./.github/workflows/build-image.yml
    secrets: inherit
    with:
      branch: ${{ needs.set-env.outputs.branch }}
      checked-out-sha: ${{ needs.set-env.outputs.checked-out-sha }}
      docker-build-file: ${{ inputs.docker-build-file }}
      org-name: ${{ inputs.org-name }}
      docker-image-name: ${{ inputs.image-stem }}-${{ inputs.short-image-name }}

  deploy-to-dev:
    runs-on: ubuntu-24.04
    needs: create-and-publish-image
    name: Deploy to development
    environment: ${{ inputs.environment }}
    # Permissions for OIDC authentication
    permissions:
      id-token: write
      contents: write
      issues: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # Login to Azure using OIDC
      - name: Login to Azure CLI
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZ_CLIENT_ID }}
          tenant-id: ${{ secrets.AZ_TENANT_ID }}
          subscription-id: ${{ secrets.AZ_SUBSCRIPTION_ID }}

      # Deploy Web Application
      - name: Deploy to Azure App Services
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.RESOURCE_NAME_PREFIX }}-${{ inputs.web-app-name }}
          images: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ inputs.org-name }}/${{ inputs.image-stem }}-${{ inputs.short-image-name }}:latest
