name: Build Image and Publish to ACR - Optionally Deploy to Dev

on:
  workflow_call:
    inputs:
      docker-image-name-moodle:
        type: string
        required: true
      docker-image-name-install:
        type: string
        required: true
      base-image-version:
        type: string
        default: ''
      web-app-name-moodle:
        type: string
        default: ''
      web-app-name-install:
        type: string
        default: ''
      moodle-instance:
        type: string
        default: ''

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-image:
    runs-on: ubuntu-24.04
    environment: Dev
    name: Build & Publish Image
    # Permissions for OIDC authentication
    permissions:
      id-token: write
      contents: write
      issues: write
    outputs:
      docker-image-tag: ${{ steps.return.outputs.docker-image-tag }}
      dev-resource-name-prefix: ${{ steps.return.outputs.dev-resource-name-prefix }}
    env:
      ENVIRONMENT: Dev
      # This will make the secret available to Docker Build
      # Any other secrets that need to be added to Docker Build should also be added here
      AZURE_KUDU_SSH_PASSWORD: ${{ secrets.AZURE_KUDU_SSH_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # Run temporary postgres DB in the background for the build process
      # Moodle requires this for upgrading, so we provide it for the install as well
      - name: Bootstrap database
        run: |
          docker run --rm -d \
            --name temp-postgres \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_DB=moodle \
            -p 5432:5432 \
            postgres:17.4

      - name: Log in to Azure CLI
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZ_CLIENT_ID }}
          tenant-id: ${{ secrets.AZ_TENANT_ID }}
          subscription-id: ${{ secrets.AZ_SUBSCRIPTION_ID }}

      # Need to retrieve ACR_NAME in particular for next steps
      - name: Load Terraform variables
        uses: ./.github/actions/pre-process-terraform-variables
        with:
          environment: ${{ env.ENVIRONMENT }}
          add_as_env_vars: true

      - name: Azure Container Registry login
        run: az acr login --name ${{ env.ACR_NAME }}
        env:
          ACR_NAME: ${{ env.ACR_NAME }}

      # The build process requires these additional files
      - name: Copy Docker build files
        run: |
          cp apps/moodle-docker/config.php apps/moodle-apps-azure/
          cp apps/moodle-ddev/.ddev/commands/web/* apps/moodle-apps-azure/

      - name: Build, push and optionally deploy Moodle install app
        uses: ./.github/actions/image-build-push-deploy
        with:
          docker-build-folder: ./moodle-apps-azure
          acr-name: ${{ env.ACR_NAME }}
          docker-image-name: ${{ inputs.docker-image-name-install }}
          base-image-version: ${{ inputs.base-image-version }}
          build-args: "AZURE_KUDU_SSH_USER=${{ vars.AZURE_KUDU_SSH_USER }};MOODLE_BRANCH_VERSION=${{ vars.MOODLE_BRANCH_VERSION }}"
          build-secrets: "AZURE_KUDU_SSH_PASSWORD"
          build-target: install-app
          resource-name-prefix: ${{ env.RESOURCE_NAME_PREFIX }}
          web-app-name: ${{ inputs.web-app-name-install }}
          web-app-settings: '[{"name": "POSTGRES_DB", "value": "${{ env.RESOURCE_NAME_PREFIX }}-db-${{ inputs.web-app-name-moodle }}", "slotSetting": false}]'

      - name: Build, push and optionally deploy Moodle app
        uses: ./.github/actions/image-build-push-deploy
        with:
          docker-build-folder: ./moodle-apps-azure
          acr-name: ${{ env.ACR_NAME }}
          docker-image-name: ${{ inputs.docker-image-name-moodle }}
          base-image-version: ${{ inputs.base-image-version }}
          build-args: "AZURE_KUDU_SSH_USER=${{ vars.AZURE_KUDU_SSH_USER }};MOODLE_BRANCH_VERSION=${{ vars.MOODLE_BRANCH_VERSION }}"
          build-secrets: "AZURE_KUDU_SSH_PASSWORD"
          build-target: moodle-app
          resource-name-prefix: ${{ env.RESOURCE_NAME_PREFIX }}
          web-app-name: ${{ inputs.web-app-name-moodle }}
