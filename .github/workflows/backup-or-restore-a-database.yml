name: "Backup or Restore a database"

on:
  workflow_dispatch:
    inputs:
      job-to-run:
        description: "The job to run"
        required: true
        type: choice
        options:
          - backup
          - restore
      backup-file-name:
        description: "The name of the backup file in Blob Storage to restore (required for restore)"
        required: false
        type: string
      db-name:
        description: "The name of the database to backup/restore"
        required: true
        type: choice
        options:
          - moodle
          - usermanagement
      instance:
        description: "Environment instance"
        required: true
        type: choice
        options:
          - d01
          - d02
          - d03
  # Uncomment the schedule below to enable daily automated backups
  # schedule:
  #   - cron: '0 2 * * *'  # Daily at 2 AM UTC

permissions:
  id-token: write
  contents: read

jobs:
  # Scheduled backup job - currently disabled
  # Uncomment the schedule trigger above and remove '&& false' to enable
  scheduled-backup:
    if: github.event_name == 'schedule' && false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: [d01, d02, d03]
        db_name: [moodle, usermanagement]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions/db-operation/
          path: ./

      - name: Backup ${{ matrix.db_name }} database on ${{ matrix.instance }}
        uses: ./.github/actions/db-operation
        with:
          instance: ${{ matrix.instance }}
          db-name: ${{ matrix.db_name }}
          action: backup
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  backup:
    if: inputs.job-to-run == 'backup'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions/db-operation/
          path: ./

      - name: Backup ${{ inputs.db-name }} database on ${{ inputs.instance }}
        uses: ./.github/actions/db-operation
        with:
          instance: ${{ inputs.instance }}
          db-name: ${{ inputs.db-name }}
          action: backup
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  restore:
    if: inputs.job-to-run == 'restore'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions/db-operation/
          path: ./

      - name: Validate backup file name
        if: inputs.backup-file-name == ''
        run: |
          echo "Error: backup-file-name is required for restore operation"
          exit 1

      - name: Restore ${{ inputs.db-name }} database on ${{ inputs.instance }}
        uses: ./.github/actions/db-operation
        with:
          instance: ${{ inputs.instance }}
          db-name: ${{ inputs.db-name }}
          action: restore
          backup-file-name: ${{ inputs.backup-file-name }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
