name: "Backup or Restore a database"

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose the action to perform"
        required: true
        type: choice
        options:
          - backup
          - restore
      db_name:
        description: "Select the database to operate on"
        required: true
        type: choice
        options:
          - moodle
          - usermanagement
      backup_file_name:
        description: "Specify the backup file name to restore from (only required for restore action)"
        required: false
        type: string
      instance:
        description: "Select the environment instance"
        required: true
        type: choice
        options:
          - d01
          - d02
          - d03
  # Uncomment the schedule below to enable daily automated backups across all instances
  # schedule:
  #   - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  # Manual backup/restore job
  db-backup-restore:
    uses: ./.github/workflows/db-backup-restore.yml
    if: github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write
      contents: read
    with:
      environment: Dev
      action: ${{ github.event.inputs.action }}
      db-name: ${{ github.event.inputs.db_name }}
      backup-file-name: ${{ github.event.inputs.backup_file_name }}
      instance: ${{ github.event.inputs.instance }}
    secrets:
      AZ_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      AZ_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      AZ_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}

  # Scheduled backup job - currently disabled
  # Uncomment the schedule trigger above and remove '&& false' to enable
  scheduled-backup:
    uses: ./.github/workflows/db-backup-restore.yml
    if: github.event_name == 'schedule' && false
    strategy:
      matrix:
        instance: [d01, d02, d03]
        db_name: [moodle, usermanagement]
    permissions:
      id-token: write
      contents: read
    with:
      environment: Dev
      action: backup
      db-name: ${{ matrix.db_name }}
      instance: ${{ matrix.instance }}
    secrets:
      AZ_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      AZ_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      AZ_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
