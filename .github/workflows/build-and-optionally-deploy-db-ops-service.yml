name: Build DB Operations Service (optionally deploy to non-prod)
run-name: Build DB Operations Service ${{ github.event.inputs.instance && github.event.inputs.instance != 'None' && format('and deploy to {0}', inputs.instance) || format('') }}
on:
  workflow_dispatch:
    inputs:
      instance:
        description: "Environment instance"
        required: true
        default: None
        type: choice
        options:
          - None
          - d01
          - d02
          - d03
  pull_request:
    branches:
      - development
    paths:
      - "apps/db-operations-service/**"

concurrency:
  # Unique group for workflow_dispatch AND unique group for each PR
  group: ${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow, github.ref) || format('{0}-{1}', github.workflow, github.event.inputs.instance) }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: write
  issues: write

jobs:
  build-and-publish-db-operations-service-image:
    name: Build and Publish DB Operations Service Image
    uses: ./.github/workflows/build-and-publish-image.yml
    secrets: inherit
    with:
      environment: Dev
      environment-instance: ${{ (github.event.inputs.instance == 'None' || github.event.inputs.instance == '') && 'd01' || github.event.inputs.instance }}
      working-dir: ./apps/db-operations-service
      # Path is in relation to the working directory
      docker-build-file: Dockerfile-azure
      docker-image-name: db-operations-service
      build-args: "AZURE_KUDU_SSH_USER=${{ vars.AZURE_KUDU_SSH_USER }}"
      build-secrets: "AZURE_KUDU_SSH_PASSWORD"
      build-target: db-operations-service
      publish-image: ${{ github.event_name != 'pull_request' }}

  optional-deploy-db-operations-service:
    needs: build-and-publish-db-operations-service-image
    if: ${{ github.event.inputs.instance != 'None' && github.event.inputs.instance }}
    name: Deploy DB Operations Service (optional)
    uses: ./.github/workflows/deploy-function-app.yml
    secrets: inherit
    with:
      environment: Dev
      environment-instance: ${{ (github.event.inputs.instance == 'None' || github.event.inputs.instance == '') && 'd01' || github.event.inputs.instance }}
      working-dir: ./apps/db-operations-service
      app-service-resource-group: ${{ needs.build-and-publish-db-operations-service-image.outputs.dev-resource-name-prefix }}-swip-rg
      tunnel-app-service: ${{ needs.build-and-publish-db-operations-service-image.outputs.dev-resource-name-prefix }}-wa-proxy-service
      requires-container-registry-login: true
      function-app-name: ${{ needs.build-and-publish-db-operations-service-image.outputs.dev-resource-name-prefix }}-fa-db-jobs
      image-tag: ${{ needs.build-and-publish-db-operations-service-image.outputs.docker-image-tag }}
