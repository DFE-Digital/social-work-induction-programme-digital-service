set shell := ["bash", "-e", "-o", "pipefail", "-c"]

solution-root := "."
test-solution-root := "../frontend.Test"
ci := "false"

default:
  @just --list

# Install local tools
install-tools:
  @cd {{solution-root}} && dotnet tool restore
  # We need to copy the bin folder, the .dockerignore makes it inaccessible
  @rm .dockerignore

ci-install-tools:
  @just install-tools

# Restore dependencies
restore:
  @cd {{solution-root}} && dotnet restore
  @cd {{test-solution-root}} && dotnet restore
  
ci-restore:
  @just restore

# Build the .NET solution
build:
  @cd {{solution-root}} && dotnet build --no-restore
  @cd {{test-solution-root}} && dotnet build --no-restore

ci-build:
  @just build

# Test the .NET solution
test:
  #!/bin/bash
  set -euo pipefail

  cd {{test-solution-root}}

  DOTNET_ARGS=("$@")

  if [[ "${GITHUB_ACTIONS:-}" == "true" || "${CI:-{{ci}}}" == "true" ]]; then
    DOTNET_ARGS+=(--no-build)
    DOTNET_ARGS+=(--logger "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true")
    DOTNET_ARGS+=(-- "RunConfiguration.CollectSourceInformation=true")
  fi

  dotnet test "${DOTNET_ARGS[@]}"

ci-test:
  @just ci=true test

# Publish the project
package-component:
  @dotnet publish {{solution-root}} -c Release --no-restore

ci-package-component:
  @just package-component

database-updates resource-group web-app-name full-image-tag:
  # None to do for user management!
