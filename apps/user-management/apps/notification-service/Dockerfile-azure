FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine3.18 AS notification-api

ARG AZURE_KUDU_SSH_USER
ARG FULL_TAG
ENV VERSION=${FULL_TAG}

WORKDIR /App

COPY entry-point.sh ./entry-point.sh
RUN chmod +x entry-point.sh

COPY bin/Release/net8.0/publish/ .
RUN rm appsettings.* \
    && echo "$VERSION" > wwwroot/version.txt
COPY appsettings.Azure.json appsettings.json

# Install SSH Server for Kudu
RUN apk --no-cache add openssh \
    shadow \
    su-exec

# Support kudu tools SSH for remote debug
COPY sshd_config /etc/ssh/sshd_config
RUN --mount=type=secret,id=AZURE_KUDU_SSH_PASSWORD \
    export AZURE_KUDU_SSH_PASSWORD=$(cat /run/secrets/AZURE_KUDU_SSH_PASSWORD) \
    && echo "$AZURE_KUDU_SSH_USER:$AZURE_KUDU_SSH_PASSWORD" | chpasswd \
    && > /etc/motd \
    && mkdir -p /var/run/sshd \
    && chmod 0755 /var/run/sshd \
    && ssh-keygen -A

# Serve on port 5000 behind nginx
ENV ASPNETCORE_HTTP_PORTS=5000
ENV ASPNETCORE_URLS=http://+:5000

# Install nginx and htpasswd tool for basic auth
RUN apk update && \
    apk add --no-cache \
    nginx \
    apache2-utils

COPY nginx.conf /etc/nginx/http.d/default.conf
COPY nginx-basic-auth.conf /App/nginx-basic-auth.conf

RUN chown -R app:app /App

ENTRYPOINT ["/App/entry-point.sh"]
CMD ["nginx","-g", "daemon off;"]

EXPOSE 80
